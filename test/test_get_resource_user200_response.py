# coding: utf-8

"""
    Opal API

    The Opal API is a RESTful API that allows you to interact with the Opal Security platform programmatically.

    The version of the OpenAPI document: 1.0
    Contact: hello@opal.dev
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from opal_security.models.get_resource_user200_response import GetResourceUser200Response

class TestGetResourceUser200Response(unittest.TestCase):
    """GetResourceUser200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetResourceUser200Response:
        """Test GetResourceUser200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetResourceUser200Response`
        """
        model = GetResourceUser200Response()
        if include_optional:
            return GetResourceUser200Response(
                data = [
                    {full_name=Jake Barnes, user_id=29827fb8-f2dd-4e80-9576-28e31e9934ac, resource_id=1b978423-db0a-4037-a4cf-f79c60cb67b3, expiration_date=2022-01-23T04:56:07Z, email=jake@company.dev}
                    ],
                cursor = 'cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw',
                total_count = 120
            )
        else:
            return GetResourceUser200Response(
                data = [
                    {full_name=Jake Barnes, user_id=29827fb8-f2dd-4e80-9576-28e31e9934ac, resource_id=1b978423-db0a-4037-a4cf-f79c60cb67b3, expiration_date=2022-01-23T04:56:07Z, email=jake@company.dev}
                    ],
        )
        """

    def testGetResourceUser200Response(self):
        """Test GetResourceUser200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
